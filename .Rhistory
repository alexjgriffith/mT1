
findLocs<-function(fasta,mloc,cloc,n1,combine="Merged"){
    l1m<-gregexpr(IUPACtoBase(n1), fasta[mloc],ignore.case=TRUE)
    l1c<-gregexpr(complement(IUPACtoBase(n1)),fasta[cloc],ignore.case=TRUE)
    both<-intersect(mloc,cloc)
    if(combine=="First"){
        mh<-cbind(loc=mloc,sapply(l1m,function(x) x[which.min(abs(x))]))
        ch<-cbind(loc=cloc,sapply(l1c,function(x) x[which.min(abs(x))]))    
        p2<-ch[!ch[,1] %in% both,]
        p3<-mh[!mh[,1] %in% both,]
        ret<-rbind(p2,p3)
        if(length(both)>0){        
            p1<-cbind(both,apply(cbind(ch[ch[,1] %in% both,2],mh[mh[,1] %in% both,2]),1,function(x) x[which.min(abs(x))]))
            ret<-p1
        }
    }
    else if(combine=="Merged"){
        keep<-function(l,loc){
            pos=unlist(lapply(l,unique))
            len<-sapply(l,length)
            eloc<-unlist(mapply(function(x,n)rep(x,n),loc,len,SIMPLIFY=FALSE))
            cbind(loc=eloc,pos=pos)
        }
        
        mh<-keep(l1m,mloc)
        ch<-keep(l1c,cloc)
        p2<-ch[!ch[,1] %in% both,]
        p3<-mh[!mh[,1] %in% both,]
        x<-merge(as.data.frame(ch),as.data.frame(mh))
        ret<-rbind(do.call(cbind,c(x[order(x[,1]),])),p2,p3)
        print(head(ret))
    }
    colnames(ret)<-c("loc","pos")
    ret[order(ret[,1]),]        
}

makeTitle<-function(x,...){
    UseMethod("makeTitle",x)
}

makeTitle.mT1<-function(obj,i){
    with(obj,{
        do.call(paste,append(lapply(combs[i,],function(x) motifs[x]),list(sep="-")))
    })}


main<-function(x,...){
    UseMethod("main",x)
}


main.mT1<-function(obj){
    main<-data.frame(t(apply(obj$combs[!obj$sig,],1,function(x) obj$motifs[x])))
    if(length(main)>0){
        colnames(main)<-c("motif1","motif2")
        mpv<-sapply(which(!obj$sig),function(x) min(obj$pvalue[[x]]))
        mpvl<-sapply(which(!obj$sig),function(x) which.min(obj$pvalue[[x]])-300)
        return(data.frame(main,mpv,mpvl))
    }
    else
        return (NULL)
    }

print.mT1<-function(obj){
    #cat("mT1\n\n")
    cat("motifs:  ")
    cat(paste0(obj$motifs[1],"\n"))
    cat(paste("        ",obj$motifs[2:length(obj$motifs)],collapse="\n"))
    cat("\n\n")
    cat(paste0("combs: ",length(obj$combs), "\n"))
    cat(paste0("sufficent: ",sum(!test$sig)),"\n")
    main<-main.mT1(obj)
    print(main)
}

plot.mT1<-function(obj,motif1=NULL,motif2=NULL,i=NULL){
    if(!is.null(i)){
        main<-data.frame(t(apply(obj$combs[!obj$sig,],1,function(x) obj$motifs[x])))
        motif1<-main[i,1]
        motif2<-main[i,2]
    }
    with(obj,{
        n1<-which(motifs==motif1)
        n2<-which(motifs==motif2)
        i<-union(which(combs[,1]==n1 & combs[,2] ==n2),
                 which(combs[,1]==n2 & combs[,2] ==n1))[1]
    par(mfrow=c(3,2))
    plot(density(dens[[n1]][,2]),main=motif1)
    plot(density(dens[[n2]][,2]),main=motif2)
    plot(mp[[i]],type="l",ylab="p",main="Convolution")
    plot(hs[[i]],type="l",ylab="Frequency",main= paste0(motifs[combs[i,1]],"-",motifs[combs[i,2]]))
        plot(getHeights(hs[[i]]),type="l",xlab="Height",ylab="Frequency",main="Freq")
    plot(pvalue[[i]],type="l",ylab="p-value",xlab="Index",main="Tests")
    })
}



mT1<-function(fasta,motifs,cl=NULL){
    mloc<-lapply(motifs,function(x) grep(IUPACtoBase(x), fasta))
    cloc<-lapply(motifs,function(x) grep(complement(IUPACtoBase(x)),fasta))
    names(mloc)<-motifs
    names(cloc)<-motifs
    tofind<-t(combn(seq(length(motifs)),2))
    if(is.null(cl)){
        t1<-apply(tofind,1,function(x){
            print(unlist(lapply(x,function(x) motifs[x])) )
            diffMotif(fasta,motifs,mloc,cloc,x[1],x[2])
        })
    }
    else{
        t1<-parApply(cl,tofind,1,function(x){
            print(unlist(lapply(x,function(x) motifs[x])) )
            diffMotif(fasta,motifs,mloc,cloc,x[1],x[2])
        })
    }
    large<-sapply(t1,function(x) all(unlist(is.na(x))))
    a<-lapply(motifs,function(x) findLocs(fasta,mloc[[x]],cloc[[x]],x))
    mT1<-list(diff=t1,dens=a,sig=large,motifs=motifs,combs=tofind)

    prob<-apply(cbind(tofind,seq(dim(tofind)[1])),1,function(x) ePD(t1[[x[3]]],a[[x[1]]],a[[x[2]]],nchar(motifs[[x[1]]]),nchar(motifs[[x[2]]])))
    mT1<-append(mT1,list(hs=lapply(prob,function(x) x[["hs"]]),
                mp=lapply(prob,function(x) x[["mp"]]),
                pvalue=lapply(prob,function(x) x[["pvalue"]])))
    attr(mT1,"class")<-"mT1"
    mT1

}

ePD<-function(t1,a,b,n1=0,n2=0){
    block<-function(x,min,max){
        c(x[1:(min-1)],rep(0,max-min+1),x[(max+1):length(x)])
    }
    test<-function(k,n,p){
        #print(c(k,n,p))
        if(n==0)
            return(0)
        else if(k>10)
            return(log(binom.test(k,n,p)$p.value,10))
           #return(log(1-pbinom(k,n,p),10))
        else
            return(0)
    }    
    combHeights<-function(x,...){
        min<-min(x)
        max<-max(x)
        lapply(list(...),function(h){        
            y<- rep(0,length(x))
            for(i in h){
                if(i>=min & i<=max)
                    y[i-min +1]<-y[i-min +1]+1
            }
            y
        })
    }
    if(any(is.na(t1))){        
        return(list(hs=NA,mp=NA,pvalue=NA))
    }
    ##hs<-getHeights(t1[t1>-100&t1<99],c(-99,99))
    hs<-combHeights(seq(-299,299),t1[,2])[[1]]
    n<-length(t1[,2])
    if(max(hs)>n){
        stop("n >hs")
    }
    #ah<-cbind(do.call(seq,as.list(range(a[,2]))),getHeights(a[,2]))
    #bh<-cbind(do.call(seq,as.list(range(b[,2]))),getHeights(b[,2]))
    mod<-as.integer(do.call(convolve,append(combHeights(seq(1,300),a,b),list(type="open"))))
    mp<-mod/sum(mod)
    ##mod<-as.integer(convolve(ah[ah[,1]<201,2],bh[bh[,1]<201,2],
    ##                         type="open"))[]
    ##mp<-mod[101:299]/sum(mod)
    pvalue<-block(mapply(function(a,b)test(b,n,a),mp,hs),100-n2,100+n1)
    list(hs=hs,mp=mp,pvalue=pvalue)
}

motifs
motifs
pwd
cwdir()
getwd()
setwd("../masters/r-workspace/")
devtools::create(rstudio=FALSE)
devtools::create("mT1"rstudio=FALSE)
devtools::create("mT1",rstudio=FALSE)
namse(jaspar)
names(jaspar)
PCA$fasta
IUPACtoBase("CANNTG")
IUPACtoBase("CANNTG",TRUE)
nchar(PCA$fasta[1])
getwd()
setwd("mT1/data/")
setwd("mT1/data/")
fasta<-PCA$fasta
fasta
save(fasta,"fasta.RData")
save(fasta,file="fasta.RData")
peaks<-PCA$bed
save(peaks,file="peaks.RData")
peask
peaks
colnames(peaks)<-NULL
peaks
peaks<-PCA$bed
rownames(peaks)<-NULL
peaks
save(peaks,file="peaks.RData")
fasta
test
save(jaspar,file="jaspar.RData")
motifs
motifs<-unique(c("CANNTG","GATAA",jaspar$jsublM[1:10]))
system.time(objMT1<-mT1(PCA$fasta,motifs))
mT1
objMT1
save(objMT1,file="objMT1.RData")
peaks
getwd()
setwd("../")
document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
install()
devtools::install()
devtools::install()
fasat
fasta
q()
n
library("mT1")
fasta
peaks
?peaks
test<-mT1(fasta,c("CANNTG","GATAA",jaspar$jjsublM[1:10]))
fasta
libary(Biostrings)
str(fasta)
str(fasta@ranges)
str(fasta@ranges@width)
str(fasta@ranges@width[1])
getwd()
install()
devtools::install()
setwd("~/masters/r-workspace/mT1/")
devtools::install()
test<-mT1(fasta,c("CANNTG","GATAA",jaspar$jjsublM[1:10]))
devtools::install()
test<-mT1(fasta,c("CANNTG","GATAA",jaspar$jjsublM[1:10]))
devtools::install()
test<-mT1(fasta,c("CANNTG","GATAA",jaspar$jjsublM[1:10]))
devtools::install()
test<-mT1(fasta,c("CANNTG","GATAA",jaspar$jjsublM[1:10]))
test<-mT1(fasta,c("CANNTG","GATAA",jaspar$jjsublM[1:10]))
test<-mT1(fasta,c("CANNTG","GATAA",jaspar$jjsublM[1:10]))
test<-mT1(fasta,c("CANNTG","GATAA",jaspar$jjsublM[1:10]))
test<-mT1(fasta,c("CANNTG","GATAA",jaspar$jsublM[1:10]))
plot(test,i=1)
plot(test,i=1)
plot(test,i=1)
plot(test,i=1)
test
ls
ls()
jaspar
str(jaspar)
env(jaspar)
environment(jaspar)
install()
devtools::install()
document()
devtools::document()
devtools::document()
devtools::install()
_d
`_d`
jaspar
load("inst/extdata/jaspar.RData")
mT1_jaspar
names(mT1_jaspar)
getwd()
setwd("data")
devtools::document()
devtools::document()
devtools::install()
mT1_fasta
mT1_jaspar
mT1_peaks
q()
n
library(mT1)
mT1_peaks
document()
devtools::document()
devtools::document()
devtools::install()
combn(seq(lengths(motifs)),2)
motifs<-c("CANNTG","GATTA")
motifs<-c("CANNTG","GATAA")
combn(seq(lengths(motifs)),2)
combn(seq(length(motifs)),2)
t(combn(seq(length(motifs)),2))
dim(t(combn(seq(length(motifs)),2)))
dim(t(combn(seq(length(motifs)),2)))[1]
dim(t(combn(seq(length(motifs)),2)))[1]<2
apply(t(combn(seq(length(motifs)),2)),1,function(x) x)
mT1(mT1_fasta,c("CANNTG","GATAA"))
mT1(mT1_fasta,c("CANNTG","GATAA"))
mT1(mT1_fasta,c("CANNTG","GATAA"))
mT1(mT1_fasta,c("CANNTG"))
mT1(mT1_fasta,c("CANNTG","GATAA"))
mT1(mT1_fasta,c("CANNTG","GATAA","TATAA"))
mT1(mT1_fasta,c("CANNTG","GATAA","TATAA"))
install()
devtools::install()
devtools::install()
mT1(mT1_fasta,c("CANNTG","GATAA","TATAA"))
mT1_sampleMT1
names(mT1_sampleMT1)
mT1_sampleMT1$diff[[1]]
mT1_sampleMT1$dens[[1]]
plot(mT1_sampleMT1,i=1)
plot(mT1_sampleMT1,i=2)
plot(mT1_sampleMT1,i=1)
mT1_sampleMT1$combs
mT1_sampleMT1$combs[,1]
mT1_sampleMT1$combs[1,]
print
mT1_sampleMT1
sample<-mT1_sampleMT1
sample
sample
sample$dens[[1]]
sample$dens[[2]]
sample$dens[[2]][,2]
sample$dens[[1]][,2]
sample
sample$dens
sample$dens[[1]]
a<-sample$dens[[1]][,2]
b<-sample$dens[[2]][,1]
eMP(a,b,300)
plot(eMP(a,b,300))
plot(sample,i=1)
plot(sample,i=2)
plot(sample,i=3)
sample$pvalue[[1]]
sample$pvalue[[2]]
sample$hl[[2]]
sample$hs[[2]]
plot(sample$hs[[2]])
plot(sample$mp[[2]])
ePD(sample$diff[[1]],sample$dens[[1]],sample$dens[[2]],300)
mT1:::ePD(sample$diff[[1]],sample$dens[[1]],sample$dens[[2]],300)
mT1:::ePD(sample$diff[[1]],sample$dens[[1]],sample$dens[[2]],300)
mT1:::ePD(sample$diff[[1]],sample$dens[[1]],sample$dens[[2]],300)
sample$diff[[1]]
ePD(sample$diff[[1]],sample$dens[[1]],sample$dens[[2]],300)
mT1:::ePD(sample$diff[[1]],sample$dens[[1]],sample$dens[[2]],300)
btest(150,1000,0.05)
btest(150,1000,0.005)
ePD(sample$diff[[1]],sample$dens[[1]],sample$dens[[2]],300)
mT1:::ePD(sample$diff[[1]],sample$dens[[1]],sample$dens[[2]],300)
mT1_sampleMT1<-mT1(mT1_fasta,c("CANNTG","HGATAA",mT1_jaspar$jsublM[1:10]))
sample
plot(sample,i=1)
plot(sample,i=1)
plot.mT1(sample,i=1)
plot.mT1(sample,i=2)
plot.mT1(sample,i=3)
plot.mT1(sample,i=4)
plot.mT1(sample,i=5)
plot.mT1(sample,i=6)
names(sample$dens)
sample$dens[[2]]
sample$dens[[2]][,2]
plot(density(sample$dens[[2]][,2]))
plot(density(sample$dens[[1]][,2]))
plot(density(sample$dens[[3]][,2]))
plot.mT1(sample,i=1)
sample$combs[,1]
sample$combs[1,]
sample$combs[sample$sig,]
sample$combs[!sample$sig,]
plot.mT1(sample,i=1)
plot.mT1(sample,i=1)
plot.mT1(sample,i=2)
main<-data.frame(t(apply(sample$combs[!sample$sig,],1,function(x) sample$motifs[x])))
main
main<-data.frame(t(apply(sample$combs[!sample$sig,],1,function(x) sample$motifs[x])))[1,1]
main
main
as.character(main)
plot.mT1(sample,i=1)
sample$motifs=="HGATAA"
plot.mT1(sample,i=1)
plot.mT1(sample,i=1)
sample$hs[[1]]
min(sample$hs[[1]])
max(sample$hs[[1]])
with(sample,{
    combHeights(seq(min(hs[[i]],max(hs[[i]]))),
                hs[[i]])
    })
with(sample,{
    combHeights(seq(min(hs[[1]],max(hs[[1]]))),
                hs[[1]])
    })
sample$hs[[1]]
plot(sample$hs[[1]])
with(sample,{
    combHeights(seq(0,max(hs[[1]])),
                hs[[1]])
    })

plot.mT1(sample,i=1)
plot.mT1(sample,i=3)
plot.mT1(sample,i=4)
q(
q()
n
library(mT1)
?mT1_jaspar$jsublM
?mT1_jaspar
sample
install()
devtools::install()
sample
plot(sample,i=1)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
install()
devtools::install()
devtools::install()
install()
devtools::document()
install()
devtools::install()
devtools::document()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
names(jaspar)
names(mT1_jaspar)
devtools::document()
sample
sample$dens[[1]]
sample$dens[[2]]
q()
n
